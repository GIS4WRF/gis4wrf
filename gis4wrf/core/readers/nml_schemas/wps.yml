SHARE:
#
# This section describes variables that are used by more than one WPS program.
# For example, the wrf_core variable specifies whether the WPS is to produce data for the ARW
# or the NMM core – information which is needed by both the geogrid and metgrid programs.
#
  WRF_CORE:
    type: str
    default: ARW
    options: [ARW, NMM]
    description: >
                  A character string set to either 'ARW' or 'NMM' that tells the WPS which dynamical core
                  the input data are being prepared for.

  MAX_DOM:
    type: int
    default: 1
    description: >
                  An integer specifying the total number of domains/nests, including the parent domain,
                  in the simulation.

  START_YEAR:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1000
    max: 9999
    description: >
                  A list of MAX_DOM 4-digit integers specifying the starting UTC year of the simulation
                  for each nest.

  START_MONTH:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1
    max: 12
    description: >
                  A list of MAX_DOM 2-digit integers specifying the starting UTC month of the simulation
                  for each nest.

  START_DAY:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1
    max: 31
    description: >
                  A list of MAX_DOM 2-digit integers specifying the starting UTC day of the simulation
                  for each nest.

  START_HOUR:
    type: list
    itemtype: int
    minlen: max_dom
    min: 0
    max: 23
    description: >
                  A list of MAX_DOM 2-digit integers specifying the starting UTC hour of the simulation
                  for each nest.

  END_YEAR:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1000
    max: 9999
    description: >
                  A list of MAX_DOM 4-digit integers specifying the ending UTC year of the simulation
                  for each nest.

  END_MONTH:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1
    max: 12
    description: >
                  A list of MAX_DOM 2-digit integers specifying the ending UTC month of the simulation
                  for each nest.

  END_DAY:
    type: list
    itemtype: int
    minlen: max_dom
    min: 1
    max: 31
    description: >
                  A list of MAX_DOM 2-digit integers specifying the ending UTC day of the simulation
                  for each nest.

  END_HOUR:
    type: list
    itemtype: int
    minlen: max_dom
    min: 0
    max: 23
    description: >
                  A list of MAX_DOM 2-digit integers specifying the ending UTC hour of the simulation
                  for each nest.

  START_DATE:
    type: list
    itemtype: str
    minlen: max_dom
    regex: \d{4}-\d{2}-\d{2}_\d{2}:\d{2}:\d{2}
    description: >
                  A list of MAX_DOM character strings of the form 'YYYY-MM-DD_HH:mm:ss' specifying
                  the starting UTC date of the simulation for each nest. The start_date variable is
                  an alternate to specifying start_year, start_month, start_day, and start_hour,
                  and if both methods are used for specifying the starting time, the start_date variable
                  will take precedence.

  END_DATE:
    type: list
    itemtype: str
    minlen: max_dom
    regex: \d{4}-\d{2}-\d{2}_\d{2}:\d{2}:\d{2}
    description: >
                  A list of MAX_DOM character strings of the form 'YYYY-MM-DD_HH:mm:ss' specifying
                  the ending UTC date of the simulation for each nest. The end_date variable is
                  an alternate to specifying end_year, end_month, end_day, and end_hour,
                  and if both methods are used for specifying the ending time, the end_date variable
                  will take precedence.

  INTERVAL_SECONDS:
    type: int
    description: >
                  The integer number of seconds between time-varying meteorological input files.

  ACTIVE_GRID:
    type: list
    itemtype: bool
    minlen: max_dom
    default: true
    description: >
                  A list of MAX_DOM logical values specifying, for each grid, whether that grid
                  should be processed by geogrid and metgrid.

  IO_FORM_GEOGRID:
    type: int
    default: 2
    options: [1, 2, 3]
    description: >
                  The WRF I/O API format that the domain files created by the geogrid program
                  will be written in. Possible options are: 1 for binary; 2 for NetCDF; 3 for GRIB1.
                  When option 1 is given, domain files will have a suffix of .int;
                  when option 2 is given, domain files will have a suffix of .nc;
                  when option 3 is given, domain files will have a suffix of .gr1.

  OPT_OUTPUT_FROM_GEOGRID_PATH:
    type: str
    default: ./
    description: >
                  A character string giving the path, either relative or absolute, to the location
                  where output files from geogrid should be written to and read from. Default value is './'.

  DEBUG_LEVEL:
    type: int
    default: 0
    description: >
                  An integer value indicating the extent to which different types of messages should be sent
                  to standard output. When debug_level is set to 0, only generally useful messages and warning
                  messages will be written to standard output. When debug_level is greater than 100,
                  informational messages that provide further runtime details are also written to standard output.
                  Debugging messages and messages specifically intended for log files are never written
                  to standard output, but are always written to the log files.

  NOCOLONS:
    type: bool
    default: false
    description: >
                  Avoids colons in filenames.

GEOGRID:
#
# This section specifies variables that are specific to the geogrid program.
# Variables in the geogrid section primarily define the size and location of all model domains,
# and where the static geographical data are found.
#
  PARENT_ID:
    type: list
    itemtype: int
    minlen: max_dom
    default: 1
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the domain number of the nest’s parent;
                  for the coarsest domain, this variable should be set to 1.

  PARENT_GRID_RATIO:
    type: list
    itemtype: int
    minlen: max_dom
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the nesting ratio
                  relative to the domain’s parent.

  I_PARENT_START:
    type: list
    itemtype: int
    minlen: max_dom
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the x-coordinate of the
                  lower-left corner of the nest in the parent unstaggered grid. For the coarsest domain,
                  a value of 1 should be specified.

  J_PARENT_START:
    type: list
    itemtype: int
    minlen: max_dom
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the y-coordinate of the
                  lower-left corner of the nest in the parent unstaggered grid.
                  For the coarsest domain, a value of 1 should be specified.

  S_WE:
    type: list
    itemtype: int
    minlen: max_dom
    default: 1
    description: >
                  A list of MAX_DOM integers which should all be set to 1.

  E_WE:
    type: list
    itemtype: int
    minlen: max_dom
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the nest’s full west-east dimension.
                  For nested domains, e_we must be one greater than an integer multiple of the
                  nest's parent_grid_ratio (i.e., e_we = n*parent_grid_ratio+1 for some positive integer n).

  S_SN:
    type: list
    itemtype: int
    minlen: max_dom
    default: 1
    description: >
                  A list of MAX_DOM integers which should all be set to 1.

  E_SN:
    type: list
    itemtype: int
    minlen: max_dom
    description: >
                  A list of MAX_DOM integers specifying, for each nest, the nest’s full south-north dimension.
                  For nested domains, e_sn must be one greater than an integer multiple of the nest's
                  parent_grid_ratio (i.e., e_sn = n*parent_grid_ratio+1 for some positive integer n).

  GEOG_DATA_RES:
    type: list
    itemtype: str
    minlen: max_dom
    default: default
    description: >
                  A list of MAX_DOM character strings specifying, for each nest, a corresponding resolution or list
                  of resolutions separated by + symbols of source data to be used when interpolating static terrestrial
                  data to the nest’s grid. For each nest, this string should contain a resolution matching a string
                  preceding a colon in a rel_path or abs_path specification (see the description of GEOGRID.TBL options)
                  in the GEOGRID.TBL file for each field. If a resolution in the string does not match any such string
                  in a rel_path or abs_path specification for a field in GEOGRID.TBL, a default resolution of data for
                  that field, if one is specified, will be used. If multiple resolutions match, the first resolution
                  to match a string in a rel_path or abs_path specification in the GEOGRID.TBL file will be used.

  DX:
    type: real
    description: >
                  A real value specifying the grid distance in the x-direction where the map scale factor is 1.
                  For ARW, the grid distance is in meters for the 'polar', 'lambert', and 'mercator' projection,
                  and in degrees longitude for the 'lat-lon' projection; for NMM, the grid distance is in degrees
                  longitude. Grid distances for nests are determined recursively based on values specified for
                  parent_grid_ratio and parent_id.

  DY:
    type: real
    description: >
                  A real value specifying the nominal grid distance in the y-direction where the map scale factor is 1.
                  For ARW, the grid distance is in meters for the 'polar', 'lambert', and 'mercator' projection, and in
                  degrees latitude for the 'lat-lon' projection; for NMM, the grid distance is in degrees latitude.
                  Grid distances for nests are determined recursively based on values specified for parent_grid_ratio
                  and parent_id.

  MAP_PROJ:
    type: str
    default: lambert
    options: [lambert, polar, mercator, lat-lon, rotated_ll]
    description: >
                  A character string specifying the projection of the simulation domain.
                  For ARW, accepted projections are 'lambert', 'polar', 'mercator', and 'lat-lon'; for NMM,
                  a projection of 'rotated_ll' must be specified.

  REF_LAT:
    type: real
    description: >
                  A real value specifying the latitude part of a (latitude, longitude) location whose (i,j)
                  location in the simulation domain is known. For ARW, ref_lat gives the latitude of the
                  center-point of the coarse domain by default (i.e., when ref_x and ref_y are not specified).
                  For NMM, ref_lat always gives the latitude to which the origin is rotated.

  REF_LON:
    type: real
    description: >
                  A real value specifying the longitude part of a (latitude, longitude) location whose (i, j)
                  location in the simulation domain is known. For ARW, ref_lon gives the longitude of the
                  center-point of the coarse domain by default (i.e., when ref_x and ref_y are not specified).
                  For NMM, ref_lon always gives the longitude to which the origin is rotated. For both ARW and NMM,
                  west longitudes are negative, and the value of ref_lon should be in the range [-180, 180].

  REF_X:
    type: real
    description: >
                  A real value specifying the i part of an (i, j) location whose (latitude, longitude) location in
                  the simulation domain is known. The (i, j) location is always given with respect to the mass-staggered grid,
                  whose dimensions are one less than the dimensions of the unstaggered grid. Default value is (((E_WE-1.)+1.)/2.) = (E_WE/2.).

  REF_Y:
    type: real
    description: >
                  A real value specifying the j part of an (i, j) location whose (latitude, longitude) location in
                  the simulation domain is known. The (i, j) location is always given with respect to the mass-staggered grid,
                  whose dimensions are one less than the dimensions of the unstaggered grid. Default value is (((E_SN-1.)+1.)/2.) = (E_SN/2.).

  TRUELAT1:
    type: real
    description: >
                  A real value specifying, for ARW, the first true latitude for the Lambert conformal projection,
                  or the only true latitude for the Mercator and polar stereographic projections.
                  For NMM, truelat1 is ignored.

  TRUELAT2:
    type: real
    description: >
                  A real value specifying, for ARW, the second true latitude for the Lambert conformal conic projection.
                  For all other projections, truelat2 is ignored.

  STAND_LON:
    type: real
    description: >
                  A real value specifying, for ARW, the longitude that is parallel with the y-axis in the Lambert conformal
                  and polar stereographic projections. For the regular latitude-longitude projection, this value gives the
                  rotation about the earth's geographic poles. For NMM, stand_lon is ignored.

  POLE_LAT:
    type: real
    default: 90.0
    description: >
                  For the latitude-longitude projection for ARW, the latitude of the North Pole with respect to the computational
                  latitude-longitude grid in which -90.0° latitude is at the bottom of a global domain, 90.0° latitude is at the top,
                  and 180.0° longitude is at the center.

  POLE_LON:
    type: real
    default: 0.0
    description: >
                  For the latitude-longitude projection for ARW, the longitude of the North Pole with respect to the computational
                  lat/lon grid in which -90.0° latitude is at the bottom of a global domain, 90.0° latitude is at the top, and 180.0°
                  longitude is at the center.

  GEOG_DATA_PATH:
    type: str
    description: >
                  A character string giving the path, either relative or absolute, to the directory where the geographical data directories may be found.
                  This path is the one to which rel_path specifications in the GEOGRID.TBL file are given in relation to.

  OPT_GEOGRID_TBL_PATH:
    type: str
    default: ./geogrid/
    description: >
                  A character string giving the path, either relative or absolute, to the GEOGRID.TBL file. The path should not contain
                  the actual file name, as GEOGRID.TBL is assumed, but should only give the path where this file is located.

UNGRIB:
#
# Determines the output format written by ungrib, the name of the output files, and interpolation options.
#
  OUT_FORMAT:
    type: str
    default: WPS
    options: [WPS, SI, MM5]
    description: >
                  A character string set either to 'WPS', 'SI', or 'MM5'. If set to 'MM5', ungrib will write output in the format
                  of the MM5 pregrid program; if set to 'SI', ungrib will write output in the format of grib_prep.exe;
                  if set to 'WPS', ungrib will write data in the WPS intermediate format.

  PREFIX:
    type: str
    default: FILE
    description: >
                  A character string that will be used as the prefix for intermediate-format files created by ungrib;
                  here, prefix refers to the string PREFIX in the filename PREFIX:YYYY-MM-DD_HH of an intermediate file.
                  The prefix may contain path information, either relative or absolute, in which case the intermediate
                  files will be written in the directory specified. This option may be useful to avoid renaming intermediate
                  files if ungrib is to be run on multiple sources of GRIB data.

  ADD_LVLS:
    type: bool
    default: false
    description: >
                  A logical that determines whether ungrib will attemp to vertically interpolate to an additional set of vertical
                  levels specified using the NEW_PLVL and INTERP_TYPE namelist options.

  INTERP_TYPE:
    type: int
    default: 0
    options: [0, 1]
    description: >
                  An integer value specifying the method that ungrib will use when vertically interpolating to new levels.
                  A value of 0 causes ungrib to interpolate linearly in pressure, and a value of 1 causes ungrib to interpolate
                  linearly in log pressure. Default value is 0.

  NEW_PLVL:
    type: list
    itemtype: real
    description: >
                  An array of real values that specify the additional vertical levels, given in Pa, to which the ungrib program will attempt
                  to interpolate when ADD_LVLS is true. The set of new levels can be specified explicitly, or, if the levels are evenly spaced
                  in pressure, exactly three values can be specified: the starting pressure, the ending pressure, and the pressure increment.
                  When a starting pressure, ending pressure, and increment are specified, the pressure increment must be a negative
                  number to signal to the ungrib program that this value is not a target pressure level, but rather, an increment
                  to be used between the first and second values.

METGRID:
#
# This section defines variables used only by the metgrid program. Typically, the user will be interested in the fg_name variable,
# and may need to modify other variables of this section less frequently.
#
  FG_NAME:
    type: list
    itemtype: str
    default: []
    description: >
                  A list of character strings specifying the path and prefix of ungribbed data files. The path may be relative
                  or absolute, and the prefix should contain all characters of the filenames up to, but not including,
                  the colon preceding the date. When more than one fg_name is specified, and the same field is found in
                  two or more input sources, the data in the last encountered source will take priority over all preceding sources
                  for that field. Default value is an empty list (i.e., no meteorological fields).

  CONSTANTS_NAME:
    type: list
    itemtype: str
    default: []
    description: >
                  A list of character strings specifying the path and full filename of ungribbed data files which are time-invariant.
                  The path may be relative or absolute, and the filename should be the complete filename; since the data are assumed
                  to be time-invariant, no date will be appended to the specified filename. Default value is an empty list (i.e., no constant fields).

  IO_FORM_METGRID:
    type: int
    default: 2
    options: [1, 2, 3]
    description: >
                  The WRF I/O API format that the output created by the metgrid program will be written in. Possible options are:
                  1 for binary; 2 for NetCDF; 3 for GRIB1. When option 1 is given, output files will have a suffix of .int;
                  when option 2 is given, output files will have a suffix of .nc; when option 3 is given, output files
                  will have a suffix of .gr1.

  OPT_OUTPUT_FROM_METGRID_PATH:
    type: str
    default: ./
    description: >
                  A character string giving the path, either relative or absolute, to the location where output files from metgrid
                  should be written to. The default value is the current working directory (i.e., the default value is './').

  OPT_METGRID_TBL_PATH:
    type: str
    default: ./metgrid/
    description: >
                  A character string giving the path, either relative or absolute, to the METGRID.TBL file; the path should
                  not contain the actual file name, as METGRID.TBL is assumed, but should only give the path where this file is located.

  PROCESS_ONLY_BDY:
    type: int
    default: 0
    description: >
                  An integer specifying the number of boundary rows and columns to be processed by metgrid for time periods
                  after the initial time; for the initial time, metgrid will always interpolate to every grid point.
                  Setting this option to the intended value of spec_bdy_width in the WRF namelist.input will speed up processing
                  in metgrid, but it should not be set if interpolated data are needed in the domain interior.
                  If this option is set to zero, metgrid will horizontally interpolate meteorological data to every grid point
                  in the model domains. This option is only available for ARW.